{"version":3,"sources":["webpack:///./app/contacts/contacts.module.ts","webpack:///./app/contacts/contact.component.js","webpack:///./app/contacts/contacts.component.js","webpack:///./app/contacts/editContact.component.js","webpack:///./app/contacts/contacts.states.js","webpack:///./app/contacts/contactDetail.component.js","webpack:///./app/contacts/contactList.component.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,sCAA6C;AAC7C,uCAA6C;AAC7C,oCAAuC;AACvC,wCAAiD;AAEjD,iDAAqG;AACrG,yDAAwD;AACxD,uDAAoD;AACpD,mDAA4C;AAC5C,oDAA8C;AAC9C,uDAAoD;AAEzC,uBAAe,GAAG,CAAC,+BAAa,EAAE,iCAAe,EAAE,kCAAgB,EAAE,kCAAgB,CAAC,CAAC;AAElG,wCAAwC;AASxC;IAAA;IAAsB,CAAC;IAAjB,cAAc;QARnB,eAAQ,CAAC;YACR,OAAO,EAAE;gBACL,qBAAY;gBACZ,mBAAW;gBACX,wBAAc,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,uBAAe,EAAE,CAAC;aACvD;YACD,YAAY,EAAE,CAAC,2BAAO,EAAE,uCAAa,EAAE,mCAAW,EAAE,6BAAQ,EAAE,mCAAW,CAAC;SAC3E,CAAC;OACI,cAAc,CAAG;IAAD,qBAAC;CAAA;AAEf,wCAAc;;;;;;;;;ACzBtB;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+ZAA+Z,WAAW,oBAAoB,EAAE;AAChc,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,6C;;;;;;;;AClCA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gUAAgU;AAChU,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,8C;;;;;;;;AClCA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC;AACvE;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,sBAAsB,eAAe,0BAA0B,EAAE;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uCAAuC,EAAE;AACxE,+BAA+B,6BAA6B,EAAE;AAC9D,+BAA+B,sCAAsC,eAAe,EAAE,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA,+BAA+B,6BAA6B,EAAE;AAC9D,+BAA+B,oCAAoC,eAAe,EAAE,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,iD;;;;;;;;ACtGA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,6BAA6B;AACpD;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,2C;;;;;;;;AClFA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,oBAAoB,GAAG,mBAAmB,+CAA+C,iBAAiB,kDAAkD,aAAa,oDAAoD,eAAe,oDAAoD,eAAe,2FAA2F,wBAAwB,sBAAsB,sBAAsB,IAAI,uBAAuB,GAAG,qBAAqB;AAC7lB,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,mD;;;;;;;;AC/BA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4VAA4V,wSAAwS,uBAAuB,yCAAyC,oBAAoB,GAAG,mBAAmB;AAC9uB,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,iD","file":"0.js","sourcesContent":["import {FormsModule}   from '@angular/forms';\nimport {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {UIRouterModule} from \"@uirouter/angular\";\n\nimport {contactsState, editContactState, newContactState, viewContactState} from \"./contacts.states\";\nimport {ContactDetail} from \"./contactDetail.component\";\nimport {ContactList} from \"./contactList.component\";\nimport {Contact} from \"./contact.component\";\nimport {Contacts} from \"./contacts.component\";\nimport {EditContact} from \"./editContact.component\";\n\nexport let CONTACTS_STATES = [contactsState, newContactState, viewContactState, editContactState];\n\n/** The NgModule for Contacts feature */\n@NgModule({\n  imports: [\n      CommonModule,\n      FormsModule,\n      UIRouterModule.forChild({ states: CONTACTS_STATES })\n  ],\n  declarations: [Contact, ContactDetail, ContactList, Contacts, EditContact],\n})\nclass ContactsModule {}\n\nexport {ContactsModule};\n\n\n\n// WEBPACK FOOTER //\n// ./app/contacts/contacts.module.ts","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\n/**\n * This component renders details for a single contact\n *\n * A button messages the contact by linking to `mymessages.compose` state passing the email as a state parameter.\n * Another button edits the contact by linking to `contacts.contact.edit` state.\n */\nvar Contact = /** @class */ (function () {\n    function Contact() {\n    }\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Contact.prototype, \"contact\", void 0);\n    Contact = __decorate([\n        core_1.Component({\n            selector: 'contact',\n            template: \"\\n    <div class=\\\"contact\\\">\\n      <contact-detail [contact]=\\\"contact\\\"></contact-detail>\\n    \\n      <!-- This button has an ui-sref to the mymessages.compose state. The ui-sref provides the mymessages.compose\\n           state with an non-url parameter, which is used as the initial message model -->\\n      <button class=\\\"btn btn-primary\\\" uiSref=\\\"mymessages.compose\\\" [uiParams]=\\\"{ message: { to: contact.email } }\\\">\\n        <i class=\\\"fa fa-envelope\\\"></i><span>Message</span>\\n      </button>\\n    \\n      <!-- This button has a relative ui-sref to the contacts.contact.edit state. -->\\n      <button class=\\\"btn btn-primary\\\" uiSref=\\\".edit\\\">\\n        <i class=\\\"fa fa-pencil\\\"></i><span>Edit Contact</span>\\n      </button>\\n      <ui-view></ui-view>\\n    </div>\\n\"\n        })\n    ], Contact);\n    return Contact;\n}());\nexports.Contact = Contact;\n//# sourceMappingURL=contact.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/contacts/contact.component.js\n// module id = 240\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\n/**\n * This component renders the contacts submodule.\n *\n * On the left is the list of contacts.\n * On the right is the ui-view viewport where contact details appear.\n */\nvar Contacts = /** @class */ (function () {\n    function Contacts() {\n    }\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], Contacts.prototype, \"contacts\", void 0);\n    Contacts = __decorate([\n        core_1.Component({\n            selector: 'contacts',\n            template: \"\\n    <div class=\\\"my-contacts flex-h\\\">\\n    \\n      <contact-list [contacts]=\\\"contacts\\\" class=\\\"flex nogrow\\\"></contact-list>\\n    \\n      <div ui-view>\\n        <!-- This default content is displayed when the ui-view is not filled in by a child state -->\\n        <h4 style=\\\"margin: 1em 2em;\\\">Select a contact</h4>\\n      </div>\\n    </div>\\n\"\n        })\n    ], Contacts);\n    return Contacts;\n}());\nexports.Contacts = Contacts;\n//# sourceMappingURL=contacts.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/contacts/contacts.component.js\n// module id = 241\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar angular = require(\"angular\");\nvar angular_1 = require(\"@uirouter/angular\");\nvar core_1 = require(\"@uirouter/core\");\nvar core_2 = require(\"@angular/core\");\n/**\n * The EditContact component\n *\n * This component is used by both `contacts.contact.edit` and `contacts.new` states.\n *\n * The component makes a copy of the contqct data for editing.\n * The new copy and original (pristine) copy are used to determine if the contact is \"dirty\" or not.\n * If the user navigates to some other state while the contact is \"dirty\", the `uiCanExit` component\n * hook asks the user to confirm navigation away, losing any edits.\n *\n * The Delete Contact button is wired to the `remove` method, which:\n * - asks for confirmation from the user\n * - deletes the resource from REST API\n * - navigates back to the contacts grandparent state using relative addressing `^.^`\n *   the `reload: true` option re-fetches the contacts list from the server\n *\n * The Save Contact button is wired to the `save` method which:\n * - saves the REST resource (PUT or POST, depending)\n * - navigates back to the parent state using relative addressing `^`.\n *   when editing an existing contact, this returns to the `contacts.contact` \"view contact\" state\n *   when creating a new contact, this returns to the `contacts` list.\n *   the `reload: true` option re-fetches the contacts resolve data from the server\n */\nvar EditContact = /** @class */ (function () {\n    // Note: you can inject StateService and TransitionService from @uirouter/core\n    function EditContact($state, DialogService, Contacts, view, $trans) {\n        this.$state = $state;\n        this.DialogService = DialogService;\n        this.Contacts = Contacts;\n        this.$trans = $trans;\n        this.state = view && view.context && view.context.name;\n    }\n    EditContact.prototype.ngOnInit = function () {\n        var _this = this;\n        // Make an editable copy of the pristineContact\n        this.contact = angular.copy(this.pristineContact);\n        this.deregister = this.$trans.onBefore({ exiting: this.state }, function () { return _this.uiCanExit(); });\n    };\n    EditContact.prototype.ngOnDestroy = function () {\n        if (this.deregister)\n            this.deregister();\n    };\n    EditContact.prototype.uiCanExit = function () {\n        if (this.canExit || angular.equals(this.contact, this.pristineContact)) {\n            return true;\n        }\n        var message = 'You have unsaved changes to this contact.';\n        var question = 'Navigate away and lose changes?';\n        return this.DialogService.confirm(message, question);\n    };\n    /** Ask for confirmation, then delete the contact, then go to the grandparent state ('contacts') */\n    EditContact.prototype.remove = function (contact) {\n        var _this = this;\n        this.DialogService.confirm(\"Delete contact: \" + contact.name.first + \" \" + contact.name.last)\n            .then(function () { return _this.Contacts.remove(contact); })\n            .then(function () { return _this.canExit = true; })\n            .then(function () { return _this.$state.go(\"^.^\", null, { reload: true }); });\n    };\n    /** Save the contact, then go to the parent state (either 'contacts' or 'contacts.contact') */\n    EditContact.prototype.save = function (contact) {\n        var _this = this;\n        this.Contacts.save(contact)\n            .then(function () { return _this.canExit = true; })\n            .then(function () { return _this.$state.go(\"^\", null, { reload: true }); });\n    };\n    __decorate([\n        core_2.Input(),\n        __metadata(\"design:type\", Object)\n    ], EditContact.prototype, \"pristineContact\", void 0);\n    EditContact = __decorate([\n        core_2.Component({\n            selector: 'edit-contact',\n            template: \"\\n    <div class=\\\"contact\\\">\\n      <div class=\\\"details\\\">\\n        <div><label>First</label><input type=\\\"text\\\" [(ngModel)]=\\\"contact.name.first\\\"></div>\\n        <div><label>Last</label><input type=\\\"text\\\" [(ngModel)]=\\\"contact.name.last\\\"></div>\\n        <div><label>Company</label><input type=\\\"text\\\" [(ngModel)]=\\\"contact.company\\\"></div>\\n        <div><label>Age</label><input type=\\\"text\\\" [(ngModel)]=\\\"contact.age\\\"></div>\\n        <div><label>Phone</label><input type=\\\"text\\\" [(ngModel)]=\\\"contact.phone\\\"></div>\\n        <div><label>Email</label><input type=\\\"text\\\" [(ngModel)]=\\\"contact.email\\\"></div>\\n        <div><label>Street</label><input type=\\\"text\\\" [(ngModel)]=\\\"contact.address.street\\\"></div>\\n        <div><label>City</label><input type=\\\"text\\\" [(ngModel)]=\\\"contact.address.city\\\"> </div>\\n        <div><label>State</label><input type=\\\"text\\\" [(ngModel)]=\\\"contact.address.state\\\"></div>\\n        <div><label>Zip</label><input type=\\\"text\\\" [(ngModel)]=\\\"contact.address.zip\\\"></div>\\n        <div><label>Image</label><input type=\\\"text\\\" [(ngModel)]=\\\"contact.picture\\\"></div>\\n      </div>\\n    \\n      <hr>\\n    \\n      <div>\\n        <!-- This button's ui-sref relatively targets the parent state, i.e., contacts.contact -->\\n        <button class=\\\"btn btn-primary\\\" uiSref=\\\"^\\\"><i class=\\\"fa fa-close\\\"></i><span>Cancel</span></button>\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"save(contact)\\\"><i class=\\\"fa fa-save\\\"></i><span>Save</span></button>\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"remove(contact)\\\"><i class=\\\"fa fa-close\\\"></i><span>Delete</span></button>\\n      </div>\\n    </div>\\n\"\n        }),\n        __param(0, core_2.Inject(core_1.StateService)),\n        __param(1, core_2.Inject('DialogService')),\n        __param(2, core_2.Inject('Contacts')),\n        __param(3, core_2.Optional()), __param(3, core_2.Inject(angular_1.UIView.PARENT_INJECT)),\n        __param(4, core_2.Inject(core_1.TransitionService)),\n        __metadata(\"design:paramtypes\", [core_1.StateService, Object, Object, Object, core_1.TransitionService])\n    ], EditContact);\n    return EditContact;\n}());\nexports.EditContact = EditContact;\n//# sourceMappingURL=editContact.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/contacts/editContact.component.js\n// module id = 242\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar contact_component_1 = require(\"./contact.component\");\nvar contacts_component_1 = require(\"./contacts.component\");\nvar editContact_component_1 = require(\"./editContact.component\");\n// Resolve all the contacts.  The resolved contacts are injected into the controller.\nfunction resolveContacts(Contacts) {\n    return Contacts.all();\n}\nexports.resolveContacts = resolveContacts;\n/**\n * This state displays the contact list.\n * It also provides a nested ui-view (viewport) for child states to fill in.\n *\n * The contacts are fetched using a resolve.\n */\nexports.contactsState = {\n    parent: 'app',\n    name: \"contacts\",\n    url: \"/contacts\",\n    resolve: {\n        contacts: resolveContacts\n    },\n    data: { requiresAuth: true },\n    component: contacts_component_1.Contacts\n};\nfunction resolveContact(Contacts, $transition$) {\n    return Contacts.get($transition$.params().contactId);\n}\nexports.resolveContact = resolveContact;\n/**\n * This state displays a single contact.\n * The contact to display is fetched using a resolve, based on the `contactId` parameter.\n */\nexports.viewContactState = {\n    name: 'contacts.contact',\n    url: '/:contactId',\n    resolve: {\n        // Resolve the contact, based on the contactId parameter value.\n        // The resolved contact is provided to the contactComponent's contact binding\n        contact: resolveContact\n    },\n    component: contact_component_1.Contact\n};\n/**\n * This state allows a user to edit a contact\n *\n * The contact data to edit is injected from the parent state's resolve.\n *\n * This state uses view targeting to replace the parent ui-view (which would normally be filled\n * by 'contacts.contact') with the edit contact template/controller\n */\nexports.editContactState = {\n    name: 'contacts.contact.edit',\n    url: '/edit',\n    views: {\n        // Relatively target the grand-parent-state's $default (unnamed) ui-view\n        // This could also have been written using ui-view@state addressing: $default@contacts\n        // Or, this could also have been written using absolute ui-view addressing: !$default.$default.$default\n        '^.^.$default': {\n            bindings: { pristineContact: \"contact\" },\n            component: editContact_component_1.EditContact\n        }\n    }\n};\nfunction resolvePristineContact() {\n    return { name: {}, address: {} };\n}\nexports.resolvePristineContact = resolvePristineContact;\n/**\n * This state allows a user to create a new contact\n *\n * The contact data to edit is injected into the component from the parent state's resolve.\n */\nexports.newContactState = {\n    name: 'contacts.new',\n    url: '/new',\n    resolve: {\n        pristineContact: resolvePristineContact\n    },\n    component: editContact_component_1.EditContact\n};\n//# sourceMappingURL=contacts.states.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/contacts/contacts.states.js\n// module id = 243\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\n/**\n * This component renders a read only view of the details for a single contact.\n */\nvar ContactDetail = /** @class */ (function () {\n    function ContactDetail() {\n    }\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], ContactDetail.prototype, \"contact\", void 0);\n    ContactDetail = __decorate([\n        core_1.Component({\n            selector: 'contact-detail',\n            template: \"\\n  <div class=\\\"flex-h\\\">\\n    <div class=\\\"details\\\">\\n      <h3>{{contact.name.first}} {{contact.name.last}}</h3>\\n      <div><label>Company</label><div>{{contact.company}}</div></div>\\n      <div><label>Age</label><div>{{contact.age}}</div></div>\\n      <div><label>Phone</label><div>{{contact.phone}}</div></div>\\n      <div><label>Email</label><div>{{contact.email}}</div></div>\\n      <div class=\\\"flex-h\\\">\\n        <label>Address</label>\\n        <div>{{contact.address.street}}<br>\\n              {{contact.address.city}}, {{contact.address.state}} {{contact.address.zip}}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"flex nogrow\\\">\\n      <img [src]=\\\"contact.picture\\\"/>\\n    </div>\\n  </div>\\n\"\n        })\n    ], ContactDetail);\n    return ContactDetail;\n}());\nexports.ContactDetail = ContactDetail;\n//# sourceMappingURL=contactDetail.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/contacts/contactDetail.component.js\n// module id = 244\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\n/**\n * This component renders a list of contacts.\n *\n * At the top is a \"new contact\" button.\n * Each list item is a clickable link to the `contacts.contact` details substate\n */\nvar ContactList = /** @class */ (function () {\n    function ContactList() {\n    }\n    __decorate([\n        core_1.Input(),\n        __metadata(\"design:type\", Object)\n    ], ContactList.prototype, \"contacts\", void 0);\n    ContactList = __decorate([\n        core_1.Component({\n            selector: 'contact-list',\n            template: \"\\n  <ul class=\\\"selectlist list-unstyled\\\">\\n    <li>\\n      <!-- This link is a relative ui-sref to the contacts.new state. -->\\n      <a uiSref=\\\".new\\\">\\n        <button class=\\\"btn btn-primary\\\">\\n          <i class=\\\"fa fa-pencil\\\"></i><span>New Contact</span>\\n        </button>\\n      </a>\\n    </li>\\n\\n    <li>&nbsp;</li>\\n\\n    <!-- Highlight the selected contact:\\n        When the current state matches the ui-sref's state (and its parameters)\\n        ui-sref-active applies the 'selected' class to the li element -->\\n    <li *ngFor=\\\"let contact of contacts\\\" >\\n      <a uiSref=\\\".contact\\\" [uiParams]=\\\"{contactId: contact._id}\\\" uiSrefActive=\\\"selected\\\">\\n        {{contact.name.first}} {{contact.name.last}}\\n      </a>\\n    </li>\\n  </ul>\\n\"\n        })\n    ], ContactList);\n    return ContactList;\n}());\nexports.ContactList = ContactList;\n//# sourceMappingURL=contactList.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/contacts/contactList.component.js\n// module id = 245\n// module chunks = 0"],"sourceRoot":""}