{"version":3,"sources":["webpack:///./app/contacts/contact.component.js","webpack:///./app/contacts/contacts.component.js","webpack:///./app/contacts/editContact.component.js","webpack:///./app/contacts/contacts.states.js","webpack:///./app/contacts/contactList.component.js","webpack:///./app/contacts/contactDetail.component.js","webpack:///./app/contacts/contacts.module.js","webpack:///./app/contacts/contacts.component.ts.Contacts.html","webpack:///./app/contacts/contactList.component.ts.ContactList.html","webpack:///./app/contacts/editContact.component.ts.EditContact.html","webpack:///./app/contacts/contact.component.ts.Contact.html","webpack:///./app/contacts/contactDetail.component.ts.ContactDetail.html","webpack:///./node_modules/@uirouter/angular/lib/directives/uiView.d.ts.UIView.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,6C;;;;;;;;ACfA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,8C;;;;;;;;ACfA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,sBAAsB,eAAe,0BAA0B,EAAE;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uCAAuC,EAAE;AACxE,+BAA+B,6BAA6B,EAAE;AAC9D,+BAA+B,sCAAsC,eAAe,EAAE,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA,+BAA+B,6BAA6B,EAAE;AAC9D,+BAA+B,oCAAoC,eAAe,EAAE,EAAE;AACtF;AACA;AACA,CAAC;AACD;AACA,iD;;;;;;;;ACzEA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,6BAA6B;AACpD;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS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","file":"0.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\n/**\n * This component renders details for a single contact\n *\n * A button messages the contact by linking to `mymessages.compose` state passing the email as a state parameter.\n * Another button edits the contact by linking to `contacts.contact.edit` state.\n */\nvar Contact = /** @class */ (function () {\n    function Contact() {\n    }\n    return Contact;\n}());\nexports.Contact = Contact;\n//# sourceMappingURL=contact.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/contacts/contact.component.js\n// module id = 242\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\n/**\n * This component renders the contacts submodule.\n *\n * On the left is the list of contacts.\n * On the right is the ui-view viewport where contact details appear.\n */\nvar Contacts = /** @class */ (function () {\n    function Contacts() {\n    }\n    return Contacts;\n}());\nexports.Contacts = Contacts;\n//# sourceMappingURL=contacts.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/contacts/contacts.component.js\n// module id = 243\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar angular = require(\"angular\");\nvar core_1 = require(\"@uirouter/core\");\nvar core_2 = require(\"@angular/core\");\n/**\n * The EditContact component\n *\n * This component is used by both `contacts.contact.edit` and `contacts.new` states.\n *\n * The component makes a copy of the contqct data for editing.\n * The new copy and original (pristine) copy are used to determine if the contact is \"dirty\" or not.\n * If the user navigates to some other state while the contact is \"dirty\", the `uiCanExit` component\n * hook asks the user to confirm navigation away, losing any edits.\n *\n * The Delete Contact button is wired to the `remove` method, which:\n * - asks for confirmation from the user\n * - deletes the resource from REST API\n * - navigates back to the contacts grandparent state using relative addressing `^.^`\n *   the `reload: true` option re-fetches the contacts list from the server\n *\n * The Save Contact button is wired to the `save` method which:\n * - saves the REST resource (PUT or POST, depending)\n * - navigates back to the parent state using relative addressing `^`.\n *   when editing an existing contact, this returns to the `contacts.contact` \"view contact\" state\n *   when creating a new contact, this returns to the `contacts` list.\n *   the `reload: true` option re-fetches the contacts resolve data from the server\n */\nvar EditContact = /** @class */ (function () {\n    // Note: you can inject StateService and TransitionService from @uirouter/core\n    function EditContact($state, DialogService, Contacts, view, $trans) {\n        this.$state = $state;\n        this.DialogService = DialogService;\n        this.Contacts = Contacts;\n        this.$trans = $trans;\n        this.state = view && view.context && view.context.name;\n    }\n    EditContact.prototype.ngOnInit = function () {\n        var _this = this;\n        // Make an editable copy of the pristineContact\n        this.contact = angular.copy(this.pristineContact);\n        this.deregister = this.$trans.onBefore({ exiting: this.state }, function () { return _this.uiCanExit(); });\n    };\n    EditContact.prototype.ngOnDestroy = function () {\n        if (this.deregister)\n            this.deregister();\n    };\n    EditContact.prototype.uiCanExit = function () {\n        if (this.canExit || angular.equals(this.contact, this.pristineContact)) {\n            return true;\n        }\n        var message = 'You have unsaved changes to this contact.';\n        var question = 'Navigate away and lose changes?';\n        return this.DialogService.confirm(message, question);\n    };\n    /** Ask for confirmation, then delete the contact, then go to the grandparent state ('contacts') */\n    EditContact.prototype.remove = function (contact) {\n        var _this = this;\n        this.DialogService.confirm(\"Delete contact: \" + contact.name.first + \" \" + contact.name.last)\n            .then(function () { return _this.Contacts.remove(contact); })\n            .then(function () { return _this.canExit = true; })\n            .then(function () { return _this.$state.go(\"^.^\", null, { reload: true }); });\n    };\n    /** Save the contact, then go to the parent state (either 'contacts' or 'contacts.contact') */\n    EditContact.prototype.save = function (contact) {\n        var _this = this;\n        this.Contacts.save(contact)\n            .then(function () { return _this.canExit = true; })\n            .then(function () { return _this.$state.go(\"^\", null, { reload: true }); });\n    };\n    return EditContact;\n}());\nexports.EditContact = EditContact;\n//# sourceMappingURL=editContact.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/contacts/editContact.component.js\n// module id = 244\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar contact_component_1 = require(\"./contact.component\");\nvar contacts_component_1 = require(\"./contacts.component\");\nvar editContact_component_1 = require(\"./editContact.component\");\n// Resolve all the contacts.  The resolved contacts are injected into the controller.\nfunction resolveContacts(Contacts) {\n    return Contacts.all();\n}\nexports.resolveContacts = resolveContacts;\n/**\n * This state displays the contact list.\n * It also provides a nested ui-view (viewport) for child states to fill in.\n *\n * The contacts are fetched using a resolve.\n */\nexports.contactsState = {\n    parent: 'app',\n    name: \"contacts\",\n    url: \"/contacts\",\n    resolve: {\n        contacts: resolveContacts\n    },\n    data: { requiresAuth: true },\n    component: contacts_component_1.Contacts\n};\nfunction resolveContact(Contacts, $transition$) {\n    return Contacts.get($transition$.params().contactId);\n}\nexports.resolveContact = resolveContact;\n/**\n * This state displays a single contact.\n * The contact to display is fetched using a resolve, based on the `contactId` parameter.\n */\nexports.viewContactState = {\n    name: 'contacts.contact',\n    url: '/:contactId',\n    resolve: {\n        // Resolve the contact, based on the contactId parameter value.\n        // The resolved contact is provided to the contactComponent's contact binding\n        contact: resolveContact\n    },\n    component: contact_component_1.Contact\n};\n/**\n * This state allows a user to edit a contact\n *\n * The contact data to edit is injected from the parent state's resolve.\n *\n * This state uses view targeting to replace the parent ui-view (which would normally be filled\n * by 'contacts.contact') with the edit contact template/controller\n */\nexports.editContactState = {\n    name: 'contacts.contact.edit',\n    url: '/edit',\n    views: {\n        // Relatively target the grand-parent-state's $default (unnamed) ui-view\n        // This could also have been written using ui-view@state addressing: $default@contacts\n        // Or, this could also have been written using absolute ui-view addressing: !$default.$default.$default\n        '^.^.$default': {\n            bindings: { pristineContact: \"contact\" },\n            component: editContact_component_1.EditContact\n        }\n    }\n};\nfunction resolvePristineContact() {\n    return { name: {}, address: {} };\n}\nexports.resolvePristineContact = resolvePristineContact;\n/**\n * This state allows a user to create a new contact\n *\n * The contact data to edit is injected into the component from the parent state's resolve.\n */\nexports.newContactState = {\n    name: 'contacts.new',\n    url: '/new',\n    resolve: {\n        pristineContact: resolvePristineContact\n    },\n    component: editContact_component_1.EditContact\n};\n//# sourceMappingURL=contacts.states.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/contacts/contacts.states.js\n// module id = 245\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\n/**\n * This component renders a list of contacts.\n *\n * At the top is a \"new contact\" button.\n * Each list item is a clickable link to the `contacts.contact` details substate\n */\nvar ContactList = /** @class */ (function () {\n    function ContactList() {\n    }\n    return ContactList;\n}());\nexports.ContactList = ContactList;\n//# sourceMappingURL=contactList.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/contacts/contactList.component.js\n// module id = 246\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\n/**\n * This component renders a read only view of the details for a single contact.\n */\nvar ContactDetail = /** @class */ (function () {\n    function ContactDetail() {\n    }\n    return ContactDetail;\n}());\nexports.ContactDetail = ContactDetail;\n//# sourceMappingURL=contactDetail.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/contacts/contactDetail.component.js\n// module id = 247\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar contacts_states_1 = require(\"./contacts.states\");\nexports.CONTACTS_STATES = [contacts_states_1.contactsState, contacts_states_1.newContactState, contacts_states_1.viewContactState, contacts_states_1.editContactState];\n/** The NgModule for Contacts feature */\nvar ContactsModule = /** @class */ (function () {\n    function ContactsModule() {\n    }\n    return ContactsModule;\n}());\nexports.ContactsModule = ContactsModule;\n//# sourceMappingURL=contacts.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./app/contacts/contacts.module.js\n// module id = 248\n// module chunks = 0","\n    <div class=\"my-contacts flex-h\">\n    \n      <contact-list [contacts]=\"contacts\" class=\"flex nogrow\"></contact-list>\n    \n      <div ui-view>\n        <!-- This default content is displayed when the ui-view is not filled in by a child state -->\n        <h4 style=\"margin: 1em 2em;\">Select a contact</h4>\n      </div>\n    </div>\n\n\n\n// WEBPACK FOOTER //\n// ./app/contacts/contacts.component.ts.Contacts.html","\n  <ul class=\"selectlist list-unstyled\">\n    <li>\n      <!-- This link is a relative ui-sref to the contacts.new state. -->\n      <a uiSref=\".new\">\n        <button class=\"btn btn-primary\">\n          <i class=\"fa fa-pencil\"></i><span>New Contact</span>\n        </button>\n      </a>\n    </li>\n\n    <li>&nbsp;</li>\n\n    <!-- Highlight the selected contact:\n        When the current state matches the ui-sref's state (and its parameters)\n        ui-sref-active applies the 'selected' class to the li element -->\n    <li *ngFor=\"let contact of contacts\" >\n      <a uiSref=\".contact\" [uiParams]=\"{contactId: contact._id}\" uiSrefActive=\"selected\">\n        {{contact.name.first}} {{contact.name.last}}\n      </a>\n    </li>\n  </ul>\n\n\n\n// WEBPACK FOOTER //\n// ./app/contacts/contactList.component.ts.ContactList.html","\n    <div class=\"contact\">\n      <div class=\"details\">\n        <div><label>First</label><input type=\"text\" [(ngModel)]=\"contact.name.first\"></div>\n        <div><label>Last</label><input type=\"text\" [(ngModel)]=\"contact.name.last\"></div>\n        <div><label>Company</label><input type=\"text\" [(ngModel)]=\"contact.company\"></div>\n        <div><label>Age</label><input type=\"text\" [(ngModel)]=\"contact.age\"></div>\n        <div><label>Phone</label><input type=\"text\" [(ngModel)]=\"contact.phone\"></div>\n        <div><label>Email</label><input type=\"text\" [(ngModel)]=\"contact.email\"></div>\n        <div><label>Street</label><input type=\"text\" [(ngModel)]=\"contact.address.street\"></div>\n        <div><label>City</label><input type=\"text\" [(ngModel)]=\"contact.address.city\"> </div>\n        <div><label>State</label><input type=\"text\" [(ngModel)]=\"contact.address.state\"></div>\n        <div><label>Zip</label><input type=\"text\" [(ngModel)]=\"contact.address.zip\"></div>\n        <div><label>Image</label><input type=\"text\" [(ngModel)]=\"contact.picture\"></div>\n      </div>\n    \n      <hr>\n    \n      <div>\n        <!-- This button's ui-sref relatively targets the parent state, i.e., contacts.contact -->\n        <button class=\"btn btn-primary\" uiSref=\"^\"><i class=\"fa fa-close\"></i><span>Cancel</span></button>\n        <button class=\"btn btn-primary\" (click)=\"save(contact)\"><i class=\"fa fa-save\"></i><span>Save</span></button>\n        <button class=\"btn btn-primary\" (click)=\"remove(contact)\"><i class=\"fa fa-close\"></i><span>Delete</span></button>\n      </div>\n    </div>\n\n\n\n// WEBPACK FOOTER //\n// ./app/contacts/editContact.component.ts.EditContact.html","\n    <div class=\"contact\">\n      <contact-detail [contact]=\"contact\"></contact-detail>\n    \n      <!-- This button has an ui-sref to the mymessages.compose state. The ui-sref provides the mymessages.compose\n           state with an non-url parameter, which is used as the initial message model -->\n      <button class=\"btn btn-primary\" uiSref=\"mymessages.compose\" [uiParams]=\"{ message: { to: contact.email } }\">\n        <i class=\"fa fa-envelope\"></i><span>Message</span>\n      </button>\n    \n      <!-- This button has a relative ui-sref to the contacts.contact.edit state. -->\n      <button class=\"btn btn-primary\" uiSref=\".edit\">\n        <i class=\"fa fa-pencil\"></i><span>Edit Contact</span>\n      </button>\n      <ui-view></ui-view>\n    </div>\n\n\n\n// WEBPACK FOOTER //\n// ./app/contacts/contact.component.ts.Contact.html","\n  <div class=\"flex-h\">\n    <div class=\"details\">\n      <h3>{{contact.name.first}} {{contact.name.last}}</h3>\n      <div><label>Company</label><div>{{contact.company}}</div></div>\n      <div><label>Age</label><div>{{contact.age}}</div></div>\n      <div><label>Phone</label><div>{{contact.phone}}</div></div>\n      <div><label>Email</label><div>{{contact.email}}</div></div>\n      <div class=\"flex-h\">\n        <label>Address</label>\n        <div>{{contact.address.street}}<br>\n              {{contact.address.city}}, {{contact.address.state}} {{contact.address.zip}}\n        </div>\n      </div>\n    </div>\n\n    <div class=\"flex nogrow\">\n      <img [src]=\"contact.picture\"/>\n    </div>\n  </div>\n\n\n\n// WEBPACK FOOTER //\n// ./app/contacts/contactDetail.component.ts.ContactDetail.html","\n    <ng-template #componentTarget></ng-template>\n    <ng-content *ngIf=\"!_componentRef\"></ng-content>\n  \n\n\n// WEBPACK FOOTER //\n// ./node_modules/@uirouter/angular/lib/directives/uiView.d.ts.UIView.html"],"sourceRoot":""}